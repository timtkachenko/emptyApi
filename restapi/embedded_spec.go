// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "api server",
    "title": "api server",
    "version": "0.0.1"
  },
  "basePath": "/api",
  "paths": {
    "/": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "test",
        "operationId": "post",
        "parameters": [
          {
            "description": "Create test",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/test"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "$ref": "#/definitions/SuccessCode"
                },
                "data": {
                  "$ref": "#/definitions/test"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/health": {
      "x-swagger-router-controller": "health",
      "get": {
        "description": "Healtcheck function",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/key": {
      "get": {
        "summary": "key",
        "operationId": "key",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "test",
        "operationId": "get",
        "parameters": [
          {
            "type": "integer",
            "description": "test Id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "$ref": "#/definitions/SuccessCode"
                },
                "data": {
                  "$ref": "#/definitions/test"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-security-scopes": null
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "SuccessCode": {
      "description": "Status message for successful request",
      "type": "number",
      "example": 1
    },
    "test": {
      "type": "object",
      "properties": {
        "id": {
          "description": "test ID",
          "type": "integer"
        },
        "name": {
          "description": "Name",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "x-token",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "api server",
    "title": "api server",
    "version": "0.0.1"
  },
  "basePath": "/api",
  "paths": {
    "/": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "test",
        "operationId": "post",
        "parameters": [
          {
            "description": "Create test",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/test"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "$ref": "#/definitions/SuccessCode"
                },
                "data": {
                  "$ref": "#/definitions/test"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/health": {
      "x-swagger-router-controller": "health",
      "get": {
        "description": "Healtcheck function",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/key": {
      "get": {
        "summary": "key",
        "operationId": "key",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "test",
        "operationId": "get",
        "parameters": [
          {
            "type": "integer",
            "description": "test Id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "$ref": "#/definitions/SuccessCode"
                },
                "data": {
                  "$ref": "#/definitions/test"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-security-scopes": null
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "SuccessCode": {
      "description": "Status message for successful request",
      "type": "number",
      "example": 1
    },
    "test": {
      "type": "object",
      "properties": {
        "id": {
          "description": "test ID",
          "type": "integer"
        },
        "name": {
          "description": "Name",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "x-token",
      "in": "header"
    }
  }
}`))
}
